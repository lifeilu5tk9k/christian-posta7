# Copyright (c) 2020 PaddlePaddle Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.# Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

train:
  threads: 12
  epochs: 10
  trainer:  "SingleTraining"
  role_maler: "PaddleCloudRoleMaker"
  strategy:
    mode: "async"

  reader:
    mode: "dataset"
    batch_size: 32
    pipe_command: "python /paddle/eleps/models/ctr_dnn/dataset.py"
    train_data_path: "/paddle/eleps/models/ctr_dnn/data/train"

  model:
    models: "eleps.models.ctr_dnn.model"
    hyper_parameters:
      sparse_inputs_slots: 27
      sparse_feature_number: 1000001
      sparse_feature_dim: 8
      dense_input_dim: 13
      fc_sizes: [101, 512, 32] 
      #  - 1024
      #  - 512
      #  - 32
      learning_rate: 0.001

  save:
    increment:
      dirname: "models_for_increment"
      epoch_interval: 2
      save_last: True
    inference:
      dirname: "models_for_inference"
      epoch_interval: 4
      feed_varnames: ["C1", "C2", "C3"]
      fetch_varnames: "predict"
      save_last: True

evaluate:
  batch_size: 32
  train_thread_num: 12
  reader: "reader.py"


